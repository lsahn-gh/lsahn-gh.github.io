<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mmap on Thomas An</title>
    <link>https://memnoth.github.io/tags/mmap/</link>
    <description>Recent content in Mmap on Thomas An</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 19 May 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://memnoth.github.io/tags/mmap/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>mmap을 이용하여 GPIO 제어하기 - #1. Clock Enabling</title>
      <link>https://memnoth.github.io/2016/05/mmap%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-gpio-%EC%A0%9C%EC%96%B4%ED%95%98%EA%B8%B0---#1.-clock-enabling/</link>
      <pubDate>Thu, 19 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://memnoth.github.io/2016/05/mmap%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-gpio-%EC%A0%9C%EC%96%B4%ED%95%98%EA%B8%B0---#1.-clock-enabling/</guid>
      <description>아래 가이드는 C 언어와 Linux에 능숙하고 Computer Organization, Microprocessor를 수강한 적 있는 학부생에게 추천합니다.! 왜 mmap을 이용하여 direct로 접근하나요?  The memory-mapping method allows you to directly access the registors that control the
GPIOs. Memory-mapping is very fast (about 1000 times faster than file I/O!), but only
processes with root permissions can use it.
 책1에 따르면 memory-mapping 함수는 register에 직접 접근하도록 하며, 이는 file I/O 방식보다 1000배는 빠르다고 합니다.</description>
    </item>
    
  </channel>
</rss>