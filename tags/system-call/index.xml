<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>System Call on Thomas An</title>
    <link>https://memnoth.github.io/tags/system-call/</link>
    <description>Recent content in System Call on Thomas An</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 30 Jan 2017 20:44:40 +0900</lastBuildDate>
    
	<atom:link href="https://memnoth.github.io/tags/system-call/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>read system call overhead and file hole</title>
      <link>https://memnoth.github.io/2017/01/read-system-call-overhead-and-file-hole/</link>
      <pubDate>Mon, 30 Jan 2017 20:44:40 +0900</pubDate>
      
      <guid>https://memnoth.github.io/2017/01/read-system-call-overhead-and-file-hole/</guid>
      <description>이 글은 Advanced Programming in the Unix Environment의 4.6 연습문제에 관한 내용입니다. 4.6 연습문제의 내용은 다음과 같다.
 cp(1)처럼 파일을 복사하되, 구멍1이 있는 파일을 복사하느 경우 출력 파일에 0 바이트들을 기록하지 않는 유틸리티를 작성하라.
 위 연습문제의 키 포인트는 파일의 구멍이 \0로 채워져있다는 것이다.
복사될 파일의 데이터는 다음과 같으며 크기는 16394 byte 이다.
0000000 a b c d e f g h i j \0 \0 \0 \0 \0 \0 0000020 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 * 0040000 A B C D E F G H I J 0040012  해당 유틸리티를 간단하게 작성하면 아래와 같다.</description>
    </item>
    
  </channel>
</rss>